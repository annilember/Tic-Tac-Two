@page
@using Domain
@model WebApp.Pages.LoadGameModel

@{
    ViewData["Title"] = "Load Game";
}

<h1>Load Game</h1>
@if (TempData["Message"] != null)
{
    <div class="alert alert-warning" role="alert">
        @TempData["Message"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}
<h4 class="pt-3">Human vs Human</h4>
<table class="table">
    <thead>
    <tr>
        <th class="column-name">
            @Html.DisplayNameFor(model => model.HumanVsHumanGames[0].Name)
        </th>
        <th class="column-join">
            Join
        </th>
        <th class="column-config">
            @Html.DisplayNameFor(model => model.HumanVsHumanGames[0].Configuration)
        </th>
        <th class="column-rename"></th>
        <th class="column-delete"></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.HumanVsHumanGames)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                <div class="d-flex gap-2">
                    <form method="post" asp-page-handler="JoinGame">
                        <input asp-for="GameName" type="hidden" value="@item.Name"/>
                        <input asp-for="Password" type="hidden" value="@item.PlayerXPassword"/>
                        <button type="submit" class="btn btn-outline-dark join-as-button">@item.PlayerXName</button>
                    </form>
                    <form method="post" asp-page-handler="JoinGame">
                        <input asp-for="GameName" type="hidden" value="@item.Name"/>
                        <input asp-for="Password" type="hidden" value="@item.PlayerOPassword"/>
                        <button type="submit" class="btn btn-outline-dark join-as-button">@item.PlayerOName</button>
                    </form>
                </div>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Configuration!.Name)
            </td>
            <td>
                <form method="post" asp-page-handler="RenameGame">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input asp-for="GameName" type="hidden" value="@item.Name"/>
                    <div class="input-group mb-3">
                        <input asp-for="NewGameName" type="text" class="form-control" placeholder="New name for game"
                               aria-label="New game name" aria-describedby="submit-new-name"
                               value="@(item.Name == Model.GameName ? TempData["NewGameName"] : "")">
                        <button class="btn btn-outline-dark" type="submit" id="submit-new-name">Rename</button>
                    </div>
                    <span asp-validation-for="NewGameName" class="text-danger"></span>
                </form>
            </td>
            <td>
                <form method="post" asp-page-handler="DeleteGame">
                    <input asp-for="GameName" type="hidden" value="@item.Name"/>
                    <button type="submit" class="btn btn-outline-dark rename-delete-button">Delete</button>
                </form>
            </td>
        </tr>
    }
    </tbody>
</table>
@if (Model.HumanVsHumanGames.Count == 0)
{
    <div class="d-flex gap-2">
        <form method="post" asp-page-handler="NewGame">
            <input asp-for="GameModeName" type="hidden" value="@GameMode.GetModeName(EGameMode.HumanVsHuman.ToString())"/>
            <button type="submit" class="btn btn-outline-dark ai-vs-ai-button">Create new game</button>
        </form>
    </div>
}

<h4 class="pt-3">Human vs AI</h4>
<table class="table">
    <thead>
    <tr>
        <th class="column-name">
            @Html.DisplayNameFor(model => model.HumanVsHumanGames[0].Name)
        </th>
        <th class="column-join">
            Join
        </th>
        <th class="column-config">
            @Html.DisplayNameFor(model => model.HumanVsHumanGames[0].Configuration)
        </th>
        <th class="column-rename"></th>
        <th class="column-delete"></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.HumanVsAiGames)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                <div class="d-flex">
                    <div class="d-flex align-items-center justify-content-end@(item.ModeName == GameMode.GetModeName(EGameMode.AiVsHuman.ToString()) ?
                                                                                 " join-as-button px-2" : "")">
                        @(item.ModeName == GameMode.GetModeName(EGameMode.AiVsHuman.ToString()) ? 
                            item.PlayerXName + " vs " : "")
                    </div>
                    <form method="post" asp-page-handler="JoinGame">
                        <input asp-for="GameName" type="hidden" value="@item.Name"/>
                        <input asp-for="Password" type="hidden" value="@item.PlayerXPassword"/>
                        <button type="submit" class="btn btn-outline-dark join-as-button px-2"
                        >@(item.ModeName == GameMode.GetModeName(EGameMode.AiVsHuman.ToString()) ? 
                             item.PlayerOName : item.PlayerXName)</button>
                    </form>
                    <div class="d-flex align-items-center@(item.ModeName == GameMode.GetModeName(EGameMode.HumanVsAi.ToString()) ?
                                                             " join-as-button px-2" : "")">
                        @(item.ModeName == GameMode.GetModeName(EGameMode.HumanVsAi.ToString()) ? 
                            " vs " + item.PlayerOName : "")
                    </div>
                </div>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Configuration!.Name)
            </td>
            <td>
                <form method="post" asp-page-handler="RenameGame">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input asp-for="GameName" type="hidden" value="@item.Name"/>
                    <div class="input-group mb-3">
                        <input asp-for="NewGameName" type="text" class="form-control" placeholder="New name for game"
                               aria-label="New game name" aria-describedby="submit-new-name"
                               value="@(item.Name == Model.GameName ? TempData["NewGameName"] : "")">
                        <button class="btn btn-outline-dark" type="submit" id="submit-new-name">Rename</button>
                    </div>
                    <span asp-validation-for="NewGameName" class="text-danger"></span>
                </form>
            </td>
            <td>
                <form method="post" asp-page-handler="DeleteGame">
                    <input asp-for="GameName" type="hidden" value="@item.Name"/>
                    <button type="submit" class="btn btn-outline-dark rename-delete-button">Delete</button>
                </form>
            </td>
        </tr>
    }
    </tbody>
</table>
@if (Model.HumanVsAiGames.Count == 0)
{
    <div class="d-flex gap-2">
        <form method="post" asp-page-handler="NewGame">
            <input asp-for="GameModeName" type="hidden" value="@GameMode.GetModeName(EGameMode.HumanVsAi.ToString())"/>
            <button type="submit" class="btn btn-outline-dark ai-vs-ai-button">Create new game</button>
        </form>
    </div>
}

<h4 class="pt-3">AI vs AI</h4>
<table class="table">
    <thead>
    <tr>
        <th class="column-name">
            @Html.DisplayNameFor(model => model.HumanVsHumanGames[0].Name)
        </th>
        <th class="column-join">
            Join
        </th>
        <th class="column-config">
            @Html.DisplayNameFor(model => model.HumanVsHumanGames[0].Configuration)
        </th>
        <th class="column-rename"></th>
        <th class="column-delete"></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.AiVsAiGames)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                <div class="d-flex gap-2">
                    <form method="post" asp-page-handler="JoinGame">
                        <input asp-for="GameName" type="hidden" value="@item.Name"/>
                        <input asp-for="Password" type="hidden" value="@item.PlayerXPassword"/>
                        <button type="submit" class="btn btn-outline-dark ai-vs-ai-button">@(item.PlayerXName + " vs " + item.PlayerOName)</button>
                    </form>
                </div>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Configuration!.Name)
            </td>
            <td>
                <form method="post" asp-page-handler="RenameGame">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input asp-for="GameName" type="hidden" value="@item.Name"/>
                    <div class="input-group mb-3">
                        <input asp-for="NewGameName" type="text" class="form-control" placeholder="New name for game"
                               aria-label="New game name" aria-describedby="submit-new-name"
                               value="@(item.Name == Model.GameName ? TempData["NewGameName"] : "")">
                        <button class="btn btn-outline-dark" type="submit" id="submit-new-name">Rename</button>
                    </div>
                    <span asp-validation-for="NewGameName" class="text-danger"></span>
                </form>
            </td>
            <td>
                <form method="post" asp-page-handler="DeleteGame">
                    <input asp-for="GameName" type="hidden" value="@item.Name"/>
                    <button type="submit" class="btn btn-outline-dark rename-delete-button">Delete</button>
                </form>
            </td>
        </tr>
    }
    </tbody>
</table>
@if (Model.AiVsAiGames.Count == 0)
{
    <div class="d-flex gap-2">
        <form method="post" asp-page-handler="NewGame">
            <input asp-for="GameModeName" type="hidden" value="@GameMode.GetModeName(EGameMode.AiVsAi.ToString())"/>
            <button type="submit" class="btn btn-outline-dark ai-vs-ai-button">Create new game</button>
        </form>
    </div>
}

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
