@page
@using Domain
@using DTO
@using GameBrain
@model WebApp.Pages.GameModel

@{
    ViewData["Title"] = "Game";
}

<div class="container-md">
    <div class="row py-1">
        <h1 class="col px-1 col-auto">@Model.GameName</h1>
        <h1 class="col px-1 col-auto ms-auto">@Model.YourName()</h1>
    </div>
</div>

<h4>Round @Model.GameInstance.GameRoundNumber/@Model.SavedGame.Configuration!.MaxGameRounds</h4>
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}
<hr/>

<div class="d-flex flex-lg-row flex-column gap-3" id="gameLayout">
    <div class="container-md d-flex justify-content-center justify-content-lg-end" id="gameBoard">
        <div class="bg-dark rounded d-inline-block p-5">
            @for (int y = 0; y < Model.GameInstance.DimY; y++)
            {
                <div class="row py-1">
                    @for (int x = 0; x < Model.GameInstance.DimX; x++)
                    {
                        var xValue = x;
                        var yValue = y;
                        <div class="col px-1 col-auto">
                            @if (!Model.YourTurn())
                            {
                                <input id="slot-@x-@y" type="submit"
                                       class="btn btn-lg game-board-slot @(
                                                                         Model.GameInstance.GameGrid[x][y] ? "btn-warning" : "btn-outline-light"
                                                                         )"
                                       value="@Message.GamePieceAsString(Model.GameInstance.GameBoard[x][y])"
                                       disabled/>
                            }
                            else if (Model.GameInstance.GameBoard[x][y] != EGamePiece.Empty)
                            {
                                <form method="post" asp-page-handler="RemovePiece">
                                    <input id="slot-@xValue-@yValue" type="submit"
                                           class="btn btn-lg game-board-slot @(Model.StyleOccupiedSpot(xValue, yValue))"
                                           value="@Model.GameInstance.GameBoard[xValue][yValue].ToString()"
                                           @(!Model.GameInstance.RemovePieceModeOn ||
                                             Model.GameInstance.GameBoard[xValue][yValue] != Model.GameInstance.GetNextMoveBy()
                                               ? "disabled"
                                               : "")>

                                    <input asp-for="GameName" type="hidden" value="@Model.GameName"/>
                                    <input asp-for="Password" type="hidden" value="@Model.Password"/>
                                    <input asp-for="XCoordinate" type="hidden" value="@xValue"/>
                                    <input asp-for="YCoordinate" type="hidden" value="@yValue"/>
                                </form>
                            }
                            else if (Model.GameInstance.MovePieceModeOn)
                            {
                                <form method="post" asp-page-handler="PlaceRemovedPiece">
                                    <input id="slot-@xValue-@yValue" type="submit"
                                           value="@(Model.GameInstance.RemovedPieceCoordinateClash(xValue, yValue)
                                                      ? " "
                                                      : Model.GameInstance.GetNextMoveBy().ToString())"
                                           class="btn btn-lg game-board-slot @(Model.StyleFreeSpot(xValue, yValue))"
                                           @(Model.GameInstance.RemovedPieceCoordinateClash(xValue, yValue) ? "disabled" : "")/>

                                    <input asp-for="GameName" type="hidden" value="@Model.GameName"/>
                                    <input asp-for="Password" type="hidden" value="@Model.Password"/>
                                    <input asp-for="XCoordinate" type="hidden" value="@xValue"/>
                                    <input asp-for="YCoordinate" type="hidden" value="@yValue"/>
                                </form>
                            }
                            else
                            {
                                <form method="post" asp-page-handler="MakeAMove">
                                    <input id="slot-@xValue-@yValue" type="submit"
                                           value="@(Model.GameInstance.PlacePieceModeOn()
                                                      ? Model.GameInstance.GetNextMoveBy().ToString()
                                                      : " ")"
                                           class="btn btn-lg game-board-slot @(Model.StyleFreeSpot(xValue, yValue))"
                                           @(Model.GameInstance.PlacePieceModeOn() ? "" : "disabled")/>

                                    <input asp-for="GameName" type="hidden" value="@Model.GameName"/>
                                    <input asp-for="Password" type="hidden" value="@Model.Password"/>
                                    <input asp-for="XCoordinate" type="hidden" value="@xValue"/>
                                    <input asp-for="YCoordinate" type="hidden" value="@yValue"/>
                                </form>
                            }
                        </div>
                    }
                </div>
            }
        </div>
    </div>
    <div class="container-md" id="moveOptions">
        <div class="row py-1">
            <div class="col px-1 col-auto">
                @if (Model.YourTurn())
                {
                    <h2>Your turn</h2>
                }
                else
                {
                    <h2>@Model.GameInstance.GetPlayerName(Model.GameInstance.GetNextMoveBy())'s turn</h2>
                }
            </div>
        </div>
        <div class="row py-1">
            <div class="col px-1 col-auto">
                @if (Model.GameInstance.GamePiecesLeft(Model.GameInstance.GetNextMoveBy()) == 1)
                {
                    <h5>1 piece left</h5>
                }
                else
                {
                    <h5>@(Model.GameInstance.GamePiecesLeft(Model.GameInstance.GetNextMoveBy())) pieces left</h5>
                }
            </div>
        </div>
        <div class="row py-1">
            <div class="col px-1 col-auto">
                <form method="post" asp-page-handler="MoveTypeChosen">
                    <input asp-for="GameName" type="hidden" value="@Model.GameName"/>
                    <input asp-for="Password" type="hidden" value="@Model.Password"/>
                    <input asp-for="ChosenMove" type="hidden" value="@EChosenMove.PlacePiece.ToString()"/>
                    <button class="btn btn-lg btn-outline-dark chosen-move-button"
                            type="submit"
                            @(!Model.YourTurn() ||
                              !Model.GameInstance.HasGamePiece(Model.GameInstance.GetNextMoveBy()) ||
                              Model.GameInstance.MovePieceModeOn
                                ? "hidden"
                                : "")
                            @(Model.GameInstance.GetChosenMove() == EChosenMove.PlacePiece
                                ? "disabled"
                                : "")>Place a piece
                    </button>
                </form>
            </div>
        </div>
        <div class="row py-1">
            <div class="col px-1 col-auto">
                <form method="post" asp-page-handler="MoveTypeChosen">
                    <input asp-for="GameName" type="hidden" value="@Model.GameName"/>
                    <input asp-for="Password" type="hidden" value="@Model.Password"/>
                    <input asp-for="ChosenMove" type="hidden" value="@EChosenMove.RemovePiece.ToString()"/>
                    <button class="btn btn-lg btn-outline-dark chosen-move-button"
                            type="submit"
                            @(!Model.YourTurn() || !Model.GameInstance.CanMovePiece() ? "hidden" : "")
                            @(Model.GameInstance.GetChosenMove() == EChosenMove.RemovePiece ||
                              Model.GameInstance.GetChosenMove() == EChosenMove.MovePiece
                                ? "disabled"
                                : "")>Move a piece
                    </button>
                </form>
            </div>
        </div>
        <div class="row py-1">
            <div class="col px-1 col-auto">
                <form method="post" asp-page-handler="MoveTypeChosen">
                    <input asp-for="GameName" type="hidden" value="@Model.GameName"/>
                    <input asp-for="Password" type="hidden" value="@Model.Password"/>
                    <input asp-for="ChosenMove" type="hidden" value="@EChosenMove.MoveGrid.ToString()"/>
                    <button class="btn btn-lg btn-outline-dark chosen-move-button"
                            type="submit"
                            @(!Model.YourTurn() || !Model.GameInstance.CanMoveGrid() ? "hidden" : "")
                            @(Model.GameInstance.GetChosenMove() == EChosenMove.MoveGrid
                                ? "disabled"
                                : "")>Move grid
                    </button>
                </form>
                <form id="moveGridForm" method="post" asp-page-handler="MoveGrid">
                    <input asp-for="GameName" type="hidden" value="@Model.GameName"/>
                    <input asp-for="Password" type="hidden" value="@Model.Password"/>
                    <input asp-for="MoveGridDirection" type="hidden" id="moveGridButton"
                           data-chosen=@(Model.GameInstance.GetChosenMove() == EChosenMove.MoveGrid ? "true" : "false")>
                </form>
            </div>
            <div class="col px-1 col-auto">
                <form method="post" asp-page-handler="SaveNewGridPosition">
                    <input asp-for="GameName" type="hidden" value="@Model.GameName"/>
                    <input asp-for="Password" type="hidden" value="@Model.Password"/>
                    <input type=@(Model.GameInstance.GetChosenMove() == EChosenMove.MoveGrid ? "submit" : "hidden")
                           class="btn btn-lg btn-info" value="Set">
                </form>
            </div>
        </div>
        <div class="row py-1">
            <div class="col px-1 col-auto">
                <form method="post" asp-page-handler="AiMove">
                    <input asp-for="GameName" type="hidden" value="@Model.GameName"/>
                    <input asp-for="Password" type="hidden" value="@Model.Password"/>
                    <button class="btn btn-lg btn-outline-warning chosen-move-button"
                            type="submit"
                            @(Model.AiTurn() ? "" : "hidden")>Make AI move
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script>
        const moveGridButton = document.getElementById('moveGridButton');
        if (moveGridButton.getAttribute('data-chosen') === 'true') {
            document.addEventListener('keydown', (event) => {
                let direction = '';

                switch (event.key) {
                    case "ArrowLeft":
                        direction = "@EMoveGridDirection.Left.ToString()";
                        break;
                    case "ArrowRight":
                        direction = "@EMoveGridDirection.Right.ToString()";
                        break;
                    case "ArrowUp":
                        direction = "@EMoveGridDirection.Up.ToString()";
                        break;
                    case "ArrowDown":
                        direction = "@EMoveGridDirection.Down.ToString()";
                        break;
                }

                if (direction) {
                    moveGridButton.value = direction;
                    document.getElementById('moveGridForm').submit();
                    event.preventDefault();
                }
            });
        }
    </script>
}
